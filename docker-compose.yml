version: '3.8'

services:

  # mysql database
  mysql:
    container_name: mysql
    image: mysql
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./dockerConfig/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mysql-volume:/var/lib/mysql
    ports:
      - 3306:3306
  
  # ui to manage database
  adminer:
    container_name: adminer
    image: adminer
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    ports:
      - 8888:8080

  # nodejs app
  adonis_app:
    container_name: adonis_app
    restart: always
    depends_on:
      - mysql
    build:
      context: .
      target: dependencies
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    env_file:
      - .env
    volumes:
      - ./:/home/node/app
      # Uncomment the below line if you developing on MacOS
      #- /home/node/app/node_modules
    command: sh  -c "node ace migration:run && dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0" "

  # zookeeper
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    restart: always
    ports:
        - 2181:2181
    environment:
        KAFKA_ADVERTISED_HOST_NAME: zookeeper
  
  # kafka
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    restart: always
    ports:
        - 9092:9092
    environment:
        KAFKA_LISTENERS: "INTERNAL://:9093,EXTERNAL://:9092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9093,EXTERNAL://localhost:9092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
        - zookeeper

  # web ui for kafka
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    restart: always
    ports:
        - 9000:9000
    environment:
        KAFKA_BROKERCONNECT: kafka:9093
    depends_on:
        - kafka

volumes:
  mysql-volume: